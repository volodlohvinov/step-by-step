/*const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
let sum = 0
for (let i = 0; i < numbers.length; i++) {
    sum += numbers[i]
}

alert('Sum is ' + sum)*/

/*
1)  оголосили numbers
2)  присвоїли numbers масив з 7 елементами 
3)  оголосили sum
4)  присвоїли sum 0 : sum = 0
5)  оголосили i 
6)  присвоїли i 0 : i = 0
7)  перевірили чи i менше довжини масиву 0 < 7 - так
8)  присвоїли sum попереднє значення додане на 0-й елемент масиву: sum = 0 + 5 = 5
9)  збільшили i на одиницю: i = 1
10) перевірили, чи i менше довжини масиву: 1 < 7 - так
11) присвоїли sum попереднє значення додане на 1-й елемент масиву: sum = 5 + 8 = 13
12) збільшили i на одиницю: i = 2
13) перевірили, чи i менше довжини масиву: 2 < 7 - так
14) присвоїли sum попереднє значення додане на 2-й елемент масиву: sum = 13 + (-1) = 12
15) збільшили i на одиницю: i = 3
16) перевірили, чи i менше довжини масиву: 3 < 7 - так
17) присвоїли sum попереднє значення додане на 3-й елемент масиву: sum = 12 + ('-6') = '12-6'
18) збільшили i на одиницю: i = 4
19) перевірили, чи i менше довжини масиву: 4 < 7 - так
20) присвоїли sum попереднє значення додане на 4-й елемент масиву: sum = '12-6'+ 11 = '12-611'
21) збільшили i на одиницю: i = 5
22) перевірили, чи i менше довжини масиву: 5 < 7 - так
23) присвоїли sum попереднє значення додане на 5-й елемент масиву: sum = '12-611' + 'ololo' = '12-611ololo'
24) збільшили i на одиницю: i = 6
25) перевірили, чи i менше довжини масиву: 6 < 7 - так
26) присвоїли sum попереднє значення додане на 5-й елемент масиву: sum = '12-611ololo' + ('-2') = '12-611ololo-2'
27) збільшили i на одиницю: i = 7
28) перевірили, чи i менше довжини масиву: 7 < 7 - ні
29) вивели повідомлення Sum is 12-611ololo-2

Програма перестала коректно рахувати суму чисел на 3-ій ітерацїї
*/

// Програма з пофікшеним багом

const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
let sum = 0
for (let i = 0; i < numbers.length; i++) {
    if (!isNaN(numbers[i])) {
        sum += Number(numbers[i]);
      }
}

alert('Sum is ' + sum)